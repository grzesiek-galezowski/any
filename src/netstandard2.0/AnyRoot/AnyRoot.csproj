<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>CS8600;CS8602;CS8603</WarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>TddXt.Any.Root</AssemblyName>
    <RootNamespace>TddXt.AnyRoot</RootNamespace>
    <PackageId>Any</PackageId>
    <Product>Any</Product>
    <Description>Anonymous value generator, supporting the 'Any.Whatever()' syntax proposed on the www.sustainabletdd.com blog. It makes use of the static usings and extension methods to achieve flexibility and extensibility.</Description>
    <Authors>Grzegorz Gałęzowski</Authors>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <RepositoryUrl>https://github.com/grzesiek-galezowski/any</RepositoryUrl>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OutputPath>..\..\..\build\Release\</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\AnyExtensibility\AnyExtensibility.csproj" />
    <ProjectReference Include="..\AnyGenerators\AnyGenerators.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NuGetizer">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Collections.Immutable" />
  </ItemGroup>

</Project>
